# This is a basic workflow to help you get started with Actions

name: Python application

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Linters, Typecheckers, Formatters
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt

    - name: Refactor with pyupgrade
      id: pyupgrade
      run: |
        pyupgrade

    - name: Refactor with isort
      id: isort
      run: |
        isort .

    - name: Check types
      id: mypy
      run: |
        mypy .

  test:
    name: Test suite

    runs-on: ubuntu-latest

    env:
      COMPOSE_FILE: billing_api/tests/functional/docker-compose.yml
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        run: docker login -u $DOCKER_USER -p $DOCKER_PASS

      - name: Pull Docker Compose
        run: sudo curl -L https://github.com/docker/compose/releases/download/1.29.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose

      - name: Build Docker Images
        run: docker-compose build

      - name: Run Test DB
        run: docker-compose run -d billing_test_db

      - name: Run Tests
        env:
          STRIPE_TEST_API_KEY: ${{ secrets.STRIPE_TEST_API_KEY }}
        run: docker-compose run tests

